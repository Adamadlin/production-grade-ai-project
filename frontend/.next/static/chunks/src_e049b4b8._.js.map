{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/adamadlin/Desktop/PRODUCTION_GRADE_AI_PROJECT/frontend/src/lib/api.ts"],"sourcesContent":["\n\n\n// // frontend/src/lib/api.ts\n// const BASE = process.env.NEXT_PUBLIC_API_BASE || 'http://localhost:8000';\n\n// async function jfetch<T>(path: string, init?: RequestInit): Promise<T> {\n//   const url = path.startsWith('http') ? path : `${BASE}${path}`;\n//   const res = await fetch(url, {\n//     ...init,\n//     headers: {\n//       'Content-Type': 'application/json',\n//       ...(init?.headers || {}),\n//     },\n//   });\n//   if (!res.ok) {\n//     const text = await res.text().catch(() => '');\n//     throw new Error(text || `HTTP ${res.status}`);\n//   }\n//   return res.json() as Promise<T>;\n// }\n\n// type HealthResp = { ok: boolean; env: string; model: string };\n// type SearchResp = {\n//   query: string;\n//   results: Array<{\n//     text: string;\n//     meta?: { source?: string; start?: number; end?: number };\n//     citation?: string; // \"(URL:start-end)\"\n//   }>;\n// };\n// type SummarizeParams = {\n//   k?: number;\n//   model?: string;\n//   temperature?: number;\n//   max_tokens?: number;\n// };\n// type SummarizeResp = { topic: string; summary: string; used: number; model: string };\n// type IngestResp = {\n//   chunks: number;\n//   indexed: number;\n//   skipped?: number;\n//   json: string;\n//   csv: string;\n//   params: { tokens: number; overlap: number; force?: boolean };\n//   avg_chunk_words: number;\n//   message?: string;\n// };\n// type ExamplesResp = { examples: string[] };\n\n// export const api = {\n//   health: () => jfetch<HealthResp>('/health'),\n//   ingest: (urls: string[], tokens = 1000, overlap = 120, force = false) =>\n//     jfetch<IngestResp>(`/ingest?tokens=${tokens}&overlap=${overlap}&force=${String(force)}`, {\n//       method: 'POST',\n//       body: JSON.stringify(urls),\n//     }),\n//   search: (q: string, k = 5) => jfetch<SearchResp>(`/search?q=${encodeURIComponent(q)}&k=${k}`),\n//   summarize: (topic: string, params: SummarizeParams = {}) => {\n//     const qs = new URLSearchParams({\n//       topic,\n//       k: String(params.k ?? 8),\n//       model: params.model ?? 'llama3:8b',\n//       temperature: String(params.temperature ?? 0.1),\n//       max_tokens: String(params.max_tokens ?? 450),\n//     });\n//     return jfetch<SummarizeResp>(`/summarize?${qs.toString()}`);\n//   },\n//   // 👇 NEW: backend-driven example topics\n//   examples: (n = 6) =>\n//     jfetch<ExamplesResp>(`/examples?${new URLSearchParams({ n: String(n) }).toString()}`),\n// };\n\n\n// frontend/src/lib/api.ts\nconst BASE = process.env.NEXT_PUBLIC_API_BASE || 'http://localhost:8000';\n\nasync function jfetch<T>(path: string, init?: RequestInit): Promise<T> {\n  const url = path.startsWith('http') ? path : `${BASE}${path}`;\n  const res = await fetch(url, {\n    ...init,\n    headers: {\n      'Content-Type': 'application/json',\n      ...(init?.headers || {}),\n    },\n  });\n  if (!res.ok) {\n    const text = await res.text().catch(() => '');\n    // Surface Retry-After header if rate-limited:\n    const retry = res.headers.get('Retry-After');\n    const msg = text || `HTTP ${res.status}` + (retry ? ` (Retry-After: ${retry}s)` : '');\n    throw new Error(msg);\n  }\n  return res.json() as Promise<T>;\n}\n\ntype HealthResp = { ok: boolean; env: string; model: string };\ntype SearchResp = {\n  query: string;\n  results: Array<{\n    text: string;\n    meta?: { source?: string; start?: number; end?: number };\n    citation?: string; // \"(URL:start-end)\"\n  }>;\n};\ntype SummarizeParams = {\n  k?: number;\n  model?: string;\n  temperature?: number;\n  max_tokens?: number;\n  source?: string;   // optional backend filter\n  domain?: string;   // optional backend filter\n};\ntype SummarizeResp = { topic: string; summary: string; used: number; model: string };\ntype IngestResp = {\n  chunks: number;\n  indexed: number;\n  skipped?: number;\n  json: string;\n  csv: string;\n  params: { tokens: number; overlap: number; force?: boolean };\n  avg_chunk_words: number;\n  message?: string;\n};\ntype ExamplesResp = { examples: string[] };\n\nexport const api = {\n  health: () => jfetch<HealthResp>('/health'),\n  ingest: (urls: string[], tokens = 1000, overlap = 120, force = false) =>\n    jfetch<IngestResp>(`/ingest?tokens=${tokens}&overlap=${overlap}&force=${String(force)}`, {\n      method: 'POST',\n      body: JSON.stringify(urls),\n    }),\n  search: (q: string, k = 5, opts?: { source?: string; domain?: string }) => {\n    const qs = new URLSearchParams({ q, k: String(k) });\n    if (opts?.source) qs.set('source', opts.source);\n    if (opts?.domain) qs.set('domain', opts.domain);\n    return jfetch<SearchResp>(`/search?${qs.toString()}`);\n  },\n  summarize: (topic: string, params: SummarizeParams = {}) => {\n    const qs = new URLSearchParams({\n      topic,\n      k: String(params.k ?? 8),\n      model: params.model ?? 'llama3:8b',\n      temperature: String(params.temperature ?? 0.1),\n      max_tokens: String(params.max_tokens ?? 450),\n    });\n    if (params.source) qs.set('source', params.source);\n    if (params.domain) qs.set('domain', params.domain);\n    return jfetch<SummarizeResp>(`/summarize?${qs.toString()}`);\n  },\n  examples: (n = 6) => jfetch<ExamplesResp>(`/examples?${new URLSearchParams({ n: String(n) }).toString()}`),\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///Users/adamadlin/Desktop/PRODUCTION_GRADE_AI_PROJECT/frontend/src/components/Spinner.tsx"],"sourcesContent":["export default function Spinner() {\n  return (\n    <span className=\"inline-block h-5 w-5 animate-spin rounded-full border-2 border-white/50 border-t-transparent\"/>\n  );\n}"],"names":[],"mappings":";;;;;;AAAe,SAAS;IACtB,qBACE,6LAAC;QAAK,WAAU;;;;;;AAEpB;KAJwB","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///Users/adamadlin/Desktop/PRODUCTION_GRADE_AI_PROJECT/frontend/src/components/ChatBubble.tsx"],"sourcesContent":["// frontend/src/components/ChatBubble.tsx\n'use client';\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\nexport function extractCitations(md: string): { url: string; start: number; end: number }[] {\n  const re = /\\((https?:\\/\\/[^:()\\s]+):(\\d+)-(\\d+)\\)/g;\n  const out: { url: string; start: number; end: number }[] = [];\n  let m;\n  while ((m = re.exec(md)) !== null) out.push({ url: m[1], start: Number(m[2]), end: Number(m[3]) });\n  const key = (x: { url: string; start: number; end: number }) => `${x.url}:${x.start}-${x.end}`;\n  return Array.from(new Map(out.map(x => [key(x), x])).values());\n}\n\nfunction domainOf(url: string) {\n  try { return new URL(url).host.replace(/^www\\./, ''); } catch { return url; }\n}\n\nexport default function ChatBubble({\n  role,\n  content,\n}: {\n  role: 'user' | 'assistant';\n  content: string;\n}) {\n  const citations = role === 'assistant' ? extractCitations(content) : [];\n  const linked = content.replace(/\\((https?:\\/\\/[^:()\\s]+):(\\d+)-(\\d+)\\)/g, (_m, u, s, e) => `([${u}:${s}-${e}](${u}))`);\n\n  return (\n    <div className={clsx('flex', role === 'user' ? 'justify-end' : 'justify-start')}>\n      <div\n        className={clsx(\n          'max-w-[85%] md:max-w-[70%] rounded-2xl border px-4 py-3 shadow',\n          role === 'user'\n            ? 'bg-blue-600/20 border-blue-500/40 text-blue-50'\n            : 'bg-slate-900 border-slate-800 text-slate-100'\n        )}\n        aria-live=\"polite\"\n      >\n        {/* ⬇️ put the class on a wrapper instead of ReactMarkdown */}\n        <div className=\"prose prose-invert prose-sm\">\n          <ReactMarkdown remarkPlugins={[remarkGfm]}>\n            {linked}\n          </ReactMarkdown>\n        </div>\n\n        {citations.length > 0 && (\n          <div className=\"mt-3 border-t border-slate-800 pt-2\">\n            <div className=\"text-xs uppercase tracking-wide text-slate-400 mb-1\">Sources</div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n              {citations.map((c, i) => (\n                <a\n                  key={`${c.url}-${i}`}\n                  className=\"text-xs bg-slate-800 hover:bg-slate-700 border border-slate-700 rounded-lg px-3 py-2 flex items-center justify-between gap-3\"\n                  href={c.url}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  title={`${c.url}:${c.start}-${c.end}`}\n                >\n                  <span className=\"truncate\">{domainOf(c.url)}</span>\n                  <span className=\"shrink-0 opacity-70\">{c.start}-{c.end}</span>\n                </a>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,yCAAyC;;;;;;;;AAIzC;AACA;AACA;AALA;;;;;AAOO,SAAS,iBAAiB,EAAU;IACzC,MAAM,KAAK;IACX,MAAM,MAAqD,EAAE;IAC7D,IAAI;IACJ,MAAO,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,MAAM,KAAM,IAAI,IAAI,CAAC;QAAE,KAAK,CAAC,CAAC,EAAE;QAAE,OAAO,OAAO,CAAC,CAAC,EAAE;QAAG,KAAK,OAAO,CAAC,CAAC,EAAE;IAAE;IAChG,MAAM,MAAM,CAAC,IAAmD,AAAC,GAAW,OAAT,EAAE,GAAG,EAAC,KAAc,OAAX,EAAE,KAAK,EAAC,KAAS,OAAN,EAAE,GAAG;IAC5F,OAAO,MAAM,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,CAAA,IAAK;YAAC,IAAI;YAAI;SAAE,GAAG,MAAM;AAC7D;AAEA,SAAS,SAAS,GAAW;IAC3B,IAAI;QAAE,OAAO,IAAI,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,UAAU;IAAK,EAAE,UAAM;QAAE,OAAO;IAAK;AAC9E;AAEe,SAAS,WAAW,KAMlC;QANkC,EACjC,IAAI,EACJ,OAAO,EAIR,GANkC;IAOjC,MAAM,YAAY,SAAS,cAAc,iBAAiB,WAAW,EAAE;IACvE,MAAM,SAAS,QAAQ,OAAO,CAAC,2CAA2C,CAAC,IAAI,GAAG,GAAG,IAAM,AAAC,KAAS,OAAL,GAAE,KAAQ,OAAL,GAAE,KAAS,OAAN,GAAE,MAAM,OAAF,GAAE;IAElH,qBACE,6LAAC;QAAI,WAAW,IAAA,mJAAI,EAAC,QAAQ,SAAS,SAAS,gBAAgB;kBAC7D,cAAA,6LAAC;YACC,WAAW,IAAA,mJAAI,EACb,kEACA,SAAS,SACL,mDACA;YAEN,aAAU;;8BAGV,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,sMAAa;wBAAC,eAAe;4BAAC,2JAAS;yBAAC;kCACtC;;;;;;;;;;;gBAIJ,UAAU,MAAM,GAAG,mBAClB,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCAAsD;;;;;;sCACrE,6LAAC;4BAAI,WAAU;sCACZ,UAAU,GAAG,CAAC,CAAC,GAAG,kBACjB,6LAAC;oCAEC,WAAU;oCACV,MAAM,EAAE,GAAG;oCACX,QAAO;oCACP,KAAI;oCACJ,OAAO,AAAC,GAAW,OAAT,EAAE,GAAG,EAAC,KAAc,OAAX,EAAE,KAAK,EAAC,KAAS,OAAN,EAAE,GAAG;;sDAEnC,6LAAC;4CAAK,WAAU;sDAAY,SAAS,EAAE,GAAG;;;;;;sDAC1C,6LAAC;4CAAK,WAAU;;gDAAuB,EAAE,KAAK;gDAAC;gDAAE,EAAE,GAAG;;;;;;;;mCARjD,AAAC,GAAW,OAAT,EAAE,GAAG,EAAC,KAAK,OAAF;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBnC;KAnDwB","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///Users/adamadlin/Desktop/PRODUCTION_GRADE_AI_PROJECT/frontend/src/components/Toast.tsx"],"sourcesContent":["// frontend/src/components/Toast.tsx\n'use client';\n\nimport { useEffect } from 'react';\nimport clsx from 'clsx';\n\nexport default function Toast({\n  show,\n  type = 'error',\n  message,\n  onClose,\n  autoHideMs = 3500,\n}: {\n  show: boolean;\n  type?: 'info' | 'success' | 'error' | 'warning';\n  message: string;\n  onClose: () => void;\n  autoHideMs?: number;\n}) {\n  useEffect(() => {\n    if (!show) return;\n    const t = setTimeout(onClose, autoHideMs);\n    return () => clearTimeout(t);\n  }, [show, autoHideMs, onClose]);\n\n  if (!show) return null;\n\n  const colors = {\n    info: 'bg-sky-800 text-sky-50 border-sky-600',\n    success: 'bg-emerald-800 text-emerald-50 border-emerald-600',\n    error: 'bg-rose-800 text-rose-50 border-rose-600',\n    warning: 'bg-amber-800 text-amber-50 border-amber-600',\n  }[type];\n\n  return (\n    <div className=\"fixed inset-0 pointer-events-none flex items-start justify-center mt-6 z-[1000]\">\n      <div className={clsx('pointer-events-auto px-4 py-2 rounded-lg border shadow-lg', colors)}>\n        <div className=\"font-medium\">{type.toUpperCase()}</div>\n        <div className=\"text-sm opacity-90\">{message}</div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,oCAAoC;;;;;;AAGpC;AACA;;;AAHA;;;AAKe,SAAS,MAAM,KAY7B;QAZ6B,EAC5B,IAAI,EACJ,OAAO,OAAO,EACd,OAAO,EACP,OAAO,EACP,aAAa,IAAI,EAOlB,GAZ6B;;IAa5B,IAAA,0KAAS;2BAAC;YACR,IAAI,CAAC,MAAM;YACX,MAAM,IAAI,WAAW,SAAS;YAC9B;mCAAO,IAAM,aAAa;;QAC5B;0BAAG;QAAC;QAAM;QAAY;KAAQ;IAE9B,IAAI,CAAC,MAAM,OAAO;IAElB,MAAM,SAAS;QACb,MAAM;QACN,SAAS;QACT,OAAO;QACP,SAAS;IACX,CAAC,CAAC,KAAK;IAEP,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAW,IAAA,mJAAI,EAAC,6DAA6D;;8BAChF,6LAAC;oBAAI,WAAU;8BAAe,KAAK,WAAW;;;;;;8BAC9C,6LAAC;oBAAI,WAAU;8BAAsB;;;;;;;;;;;;;;;;;AAI7C;GApCwB;KAAA","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///Users/adamadlin/Desktop/PRODUCTION_GRADE_AI_PROJECT/frontend/src/app/page.tsx"],"sourcesContent":["\n\n// 'use client'\n\n// import { useEffect, useRef, useState } from 'react'\n// import { api } from '@/lib/api'\n// import Spinner from '@/components/Spinner'\n// import ChatBubble from '@/components/ChatBubble'\n// import ReactMarkdown from 'react-markdown'\n// import remarkGfm from 'remark-gfm'\n\n// type Msg = { id: string; role: 'user'|'assistant'; content: string }\n\n// export default function Home() {\n//   const [health, setHealth] = useState<string>('')\n//   const [busy, setBusy] = useState<boolean>(false)\n\n//   // Mode: search vs summarize\n//   const [mode, setMode] = useState<'search'|'summarize'>('summarize')\n\n//   // Model params (summarize only)\n//   const [model, setModel] = useState('llama3:8b')\n//   const [k, setK] = useState(8)\n//   const [temperature, setTemperature] = useState(0.1)\n//   const [maxTokens, setMaxTokens] = useState(500)\n\n//   // Ingest panel state\n//   const [urls, setUrls] = useState('https://www.iana.org/domains/reserved')\n//   const [tokens, setTokens] = useState(500)\n//   const [overlap, setOverlap] = useState(100)\n//   const [force, setForce] = useState(false)\n//   const [ingestOut, setIngestOut] = useState<any>(null)\n//   const [ingestBusy, setIngestBusy] = useState(false)\n\n//   const [messages, setMessages] = useState<Msg[]>([])\n//   const [input, setInput] = useState('emperor')\n//   const scroller = useRef<HTMLDivElement>(null)\n\n//   useEffect(() => {\n//     (async () => {\n//       try {\n//         const h = await api.health()\n//         setHealth(`OK (${h.env}, model: ${h.model})`)\n//       } catch (e:any) {\n//         setHealth(`Error: ${e.message}`)\n//       }\n//     })()\n//   }, [])\n\n//   useEffect(() => {\n//     scroller.current?.scrollTo({ top: scroller.current.scrollHeight, behavior: 'smooth' })\n//   }, [messages])\n\n//   async function onSend(e?: React.FormEvent) {\n//     e?.preventDefault()\n//     if (!input.trim() || busy) return\n\n//     const text = input.trim()\n//     setMessages(m => [...m, { id: crypto.randomUUID(), role: 'user', content: text }])\n//     setInput('')\n//     setBusy(true)\n\n//     try {\n//       if (mode === 'summarize') {\n//         const res = await api.summarize(text, { k, model, temperature, max_tokens: maxTokens })\n//         setMessages(m => [...m, { id: crypto.randomUUID(), role: 'assistant', content: `**Summary** *(model: ${res.model})*\\n\\n${res.summary}` }])\n//       } else {\n//         const res = await api.search(text, 5)\n//         const md = [\n//           `**Search Results for:** ${res.query}`,\n//           ...res.results.map((r, i) => {\n//             // r.citation: \"(URL:start-end)\" → extract URL\n//             const url = r.citation?.match(/\\((.+?):\\d+-\\d+\\)/)?.[1] ?? r?.meta?.source ?? '#'\n//             return `**${i+1}.** ${r.text}\\n\\n> [${r.citation}](${url})`\n//           })\n//         ].join('\\n\\n')\n//         setMessages(m => [...m, { id: crypto.randomUUID(), role: 'assistant', content: md }])\n//       }\n//     } catch (e:any) {\n//       setMessages(m => [...m, { id: crypto.randomUUID(), role: 'assistant', content: `❌ ${e.message}` }])\n//     } finally {\n//       setBusy(false)\n//     }\n//   }\n\n//   async function runIngest() {\n//     setIngestBusy(true); setIngestOut(null)\n//     try {\n//       const list = urls.split('\\n').map(s=>s.trim()).filter(Boolean)\n//       const res = await api.ingest(list, tokens, overlap, force)\n//       setIngestOut(res)\n//     } catch (e:any) {\n//       setIngestOut({ error: e.message })\n//     } finally {\n//       setIngestBusy(false)\n//     }\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-slate-950 text-slate-100\">\n//       <header className=\"sticky top-0 z-10 border-b border-slate-800 bg-slate-950/80 backdrop-blur-md\">\n//         <div className=\"max-w-5xl mx-auto px-4 py-3 flex items-center justify-between\">\n//           <div>\n//             <div className=\"font-bold\">Production-Grade AI — RAG (Next.js)</div>\n//             <div className=\"text-xs text-slate-400\">\n//               API: {process.env.NEXT_PUBLIC_API_BASE} • Health: <span className=\"text-emerald-400\">{health}</span>\n//             </div>\n//           </div>\n//           <div className=\"hidden md:flex items-center gap-3\">\n//             <div className=\"flex items-center bg-slate-900 border border-slate-700 rounded-lg overflow-hidden\">\n//               <button\n//                 className={`px-3 py-1 text-sm ${mode==='search'?'bg-slate-800':''}`}\n//                 onClick={()=>setMode('search')}\n//                 disabled={busy}\n//               >Search</button>\n//               <button\n//                 className={`px-3 py-1 text-sm ${mode==='summarize'?'bg-slate-800':''}`}\n//                 onClick={()=>setMode('summarize')}\n//                 disabled={busy}\n//               >Summarize</button>\n//             </div>\n\n//             {/* Summarize-only controls */}\n//             {mode==='summarize' && (\n//               <>\n//                 <select className=\"bg-slate-900 border border-slate-700 rounded-lg px-2 py-1\" value={model} onChange={e=>setModel(e.target.value)}>\n//                   <option>llama3:8b</option>\n//                   <option>qwen2.5:3b-instruct</option>\n//                 </select>\n//                 <label className=\"text-xs\">k <input className=\"w-14 ml-1 bg-slate-900 border border-slate-700 rounded px-2 py-1\" type=\"number\" value={k} onChange={e=>setK(Number(e.target.value))}/></label>\n//                 <label className=\"text-xs\">temp <input className=\"w-20 ml-1 bg-slate-900 border border-slate-700 rounded px-2 py-1\" type=\"number\" step={0.1} min={0} max={1} value={temperature} onChange={e=>setTemperature(Number(e.target.value))}/></label>\n//                 <label className=\"text-xs\">max <input className=\"w-20 ml-1 bg-slate-900 border border-slate-700 rounded px-2 py-1\" type=\"number\" value={maxTokens} onChange={e=>setMaxTokens(Number(e.target.value))}/></label>\n//               </>\n//             )}\n//           </div>\n//         </div>\n//       </header>\n\n//       <main className=\"max-w-5xl mx-auto px-4\">\n//         <div className=\"mt-4 text-sm text-slate-400\">\n//           {mode==='summarize'\n//             ? 'Type a topic to generate a cited summary from your indexed sources.'\n//             : 'Type a query to search semantically across your indexed sources.'}\n//         </div>\n\n//         <div ref={scroller} className=\"mt-3 h-[62vh] md:h-[66vh] overflow-y-auto space-y-3 pr-1\">\n//           {messages.length === 0 && (\n//             <div className=\"text-slate-400 text-sm\">\n//               Try <code>emperor</code>, <code>roman army tactics</code>, or switch to <b>Search</b> mode and enter keywords.\n//             </div>\n//           )}\n//           {messages.map(m => (\n//             <ChatBubble key={m.id} role={m.role}>\n//               <ReactMarkdown remarkPlugins={[remarkGfm]}>{m.content}</ReactMarkdown>\n//             </ChatBubble>\n//           ))}\n//           {busy && <div className=\"text-slate-400 text-sm flex items-center gap-2\"><Spinner/> Working…</div>}\n//         </div>\n\n//         <form onSubmit={onSend} className=\"sticky bottom-4 mt-4 bg-slate-900/70 border border-slate-800 rounded-2xl p-2 flex items-center gap-2\">\n//           <input\n//             className=\"flex-1 bg-transparent outline-none px-3 py-2\"\n//             placeholder={mode==='summarize' ? \"Type a topic to summarize…\" : \"Type a query to search…\"}\n//             value={input}\n//             onChange={e=>setInput(e.target.value)}\n//           />\n//           <button className=\"bg-blue-600 hover:bg-blue-500 active:bg-blue-700 rounded-xl px-4 py-2\" disabled={busy}>\n//             {busy ? '...' : (mode==='summarize' ? 'Summarize' : 'Search')}\n//           </button>\n//         </form>\n\n//         <section className=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-4\">\n//           <IngestCard\n//             urls={urls} setUrls={setUrls}\n//             tokens={tokens} setTokens={setTokens}\n//             overlap={overlap} setOverlap={setOverlap}\n//             force={force} setForce={setForce}\n//             runIngest={runIngest}\n//             out={ingestOut} busy={ingestBusy}\n//           />\n//           <ExamplesCard onPick={(q) => setInput(q)} />\n//         </section>\n//       </main>\n//     </div>\n//   )\n// }\n\n// function IngestCard(props: {\n//   urls: string; setUrls: (v:string)=>void;\n//   tokens: number; setTokens: (n:number)=>void;\n//   overlap: number; setOverlap: (n:number)=>void;\n//   force: boolean; setForce: (b:boolean)=>void;\n//   runIngest: () => void;\n//   out: any; busy: boolean;\n// }) {\n//   const { urls, setUrls, tokens, setTokens, overlap, setOverlap, force, setForce, runIngest, out, busy } = props\n//   return (\n//     <div className=\"bg-slate-900 border border-slate-800 rounded-2xl p-4\">\n//       <div className=\"font-semibold mb-2\">Ingest URLs</div>\n//       <textarea className=\"w-full bg-slate-950 border border-slate-800 rounded-lg p-2 h-24\" value={urls} onChange={e=>setUrls(e.target.value)} />\n//       <div className=\"flex flex-wrap gap-2 items-center mt-2 text-sm\">\n//         <label>tokens <input className=\"w-20 bg-slate-950 border border-slate-800 rounded px-2 py-1 ml-1\" type=\"number\" value={tokens} onChange={e=>setTokens(Number(e.target.value))}/></label>\n//         <label>overlap <input className=\"w-20 bg-slate-950 border border-slate-800 rounded px-2 py-1 ml-1\" type=\"number\" value={overlap} onChange={e=>setOverlap(Number(e.target.value))}/></label>\n//         <label className='flex items-center gap-2'><input type=\"checkbox\" checked={force} onChange={e=>setForce(e.target.checked)} /> force</label>\n//         <button onClick={runIngest} className=\"bg-emerald-600 hover:bg-emerald-500 rounded-lg px-3 py-1.5\" disabled={busy}>{busy?'…':'Ingest'}</button>\n//       </div>\n//       {out && <pre className=\"mt-3 text-xs bg-slate-950 border border-slate-800 rounded-lg p-2 whitespace-pre-wrap\">{JSON.stringify(out, null, 2)}</pre>}\n//     </div>\n//   )\n// }\n\n// function ExamplesCard({ onPick }: { onPick: (q: string) => void }) {\n//   const [items, setItems] = useState<string[]>([])\n//   const [loading, setLoading] = useState(true)\n//   const [err, setErr] = useState<string | null>(null)\n\n//   useEffect(() => {\n//     let mounted = true\n//     api.examples(6)\n//       .then((res) => {\n//         if (!mounted) return\n//         setItems(res.examples ?? [])\n//         setErr(null)\n//       })\n//       .catch((e: any) => {\n//         if (!mounted) return\n//         setErr(e.message || 'Failed to load examples')\n//         setItems(['emperor', 'roman army tactics', 'history of microsoft']) // fallback\n//       })\n//       .finally(() => mounted && setLoading(false))\n//     return () => { mounted = false }\n//   }, [])\n\n//   return (\n//     <div className=\"bg-slate-900 border border-slate-800 rounded-2xl p-4\">\n//       <div className=\"font-semibold mb-2\">Examples</div>\n//       {loading && <div className=\"text-sm text-slate-400\">Loading…</div>}\n//       {err && <div className=\"text-sm text-red-400 mb-2\">⚠ {err}</div>}\n//       {!loading && (\n//         <div className=\"grid grid-cols-2 gap-2 text-sm\">\n//           {items.map((x) => (\n//             <button\n//               key={x}\n//               className=\"bg-slate-800 hover:bg-slate-700 rounded-lg px-3 py-2 text-left\"\n//               onClick={() => onPick(x)}\n//               title={x}\n//             >\n//               {x}\n//             </button>\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   )\n// }\n\n\n// frontend/src/app/page.tsx\n'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport { api } from '@/lib/api';\nimport Spinner from '@/components/Spinner';\nimport ChatBubble from '@/components/ChatBubble';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport Toast from '@/components/Toast';\n\ntype Msg = { id: string; role: 'user'|'assistant'; content: string };\ntype HistoryItem = { id: string; mode: 'search'|'summarize'; input: string; at: number; params?: any };\n\nexport default function Home() {\n  const [health, setHealth] = useState<string>('');\n  const [busy, setBusy] = useState<boolean>(false);\n\n  // Mode: search vs summarize\n  const [mode, setMode] = useState<'search'|'summarize'>('summarize');\n\n  // Model params (summarize only)\n  const [model, setModel] = useState('llama3:8b');\n  const [k, setK] = useState(8);\n  const [temperature, setTemperature] = useState(0.1);\n  const [maxTokens, setMaxTokens] = useState(500);\n\n  // Optional filters\n  const [domain, setDomain] = useState('');\n  const [source, setSource] = useState('');\n\n  // Ingest panel state\n  const [urls, setUrls] = useState('https://www.iana.org/domains/reserved');\n  const [tokens, setTokens] = useState(500);\n  const [overlap, setOverlap] = useState(100);\n  const [force, setForce] = useState(false);\n  const [ingestOut, setIngestOut] = useState<any>(null);\n  const [ingestBusy, setIngestBusy] = useState(false);\n\n  const [messages, setMessages] = useState<Msg[]>([]);\n  const [input, setInput] = useState('emperor');\n  const [examples, setExamples] = useState<string[]>([]);\n\n  const [history, setHistory] = useState<HistoryItem[]>([]);\n  const [toast, setToast] = useState<{show:boolean; type:'info'|'success'|'error'|'warning'; message:string}>({\n    show: false, type: 'error', message: ''\n  });\n\n  const scroller = useRef<HTMLDivElement>(null);\n\n  // Load health, examples, and persisted settings/history\n  useEffect(() => {\n    (async () => {\n      try {\n        const h = await api.health();\n        setHealth(`OK (${h.env}, model: ${h.model})`);\n      } catch (e:any) {\n        setHealth(`Error: ${e.message}`);\n      }\n      try {\n        const ex = await api.examples(6);\n        if (Array.isArray(ex.examples) && ex.examples.length) {\n          setExamples(ex.examples);\n        } else {\n          setExamples(['emperor', 'roman army tactics', 'history of microsoft', 'Byzantine emperors']);\n        }\n      } catch {\n        setExamples(['emperor', 'roman army tactics', 'history of microsoft', 'Byzantine emperors']);\n      }\n\n      const saved = localStorage.getItem('pgai.settings');\n      if (saved) {\n        try {\n          const s = JSON.parse(saved);\n          if (s.model) setModel(s.model);\n          if (s.k) setK(s.k);\n          if (s.temperature != null) setTemperature(s.temperature);\n          if (s.maxTokens) setMaxTokens(s.maxTokens);\n          if (s.domain) setDomain(s.domain);\n          if (s.source) setSource(s.source);\n        } catch {}\n      }\n      const hst = localStorage.getItem('pgai.history');\n      if (hst) {\n        try { setHistory(JSON.parse(hst)); } catch {}\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    scroller.current?.scrollTo({ top: scroller.current.scrollHeight, behavior: 'smooth' });\n  }, [messages]);\n\n  useEffect(() => {\n    localStorage.setItem('pgai.settings', JSON.stringify({ model, k, temperature, maxTokens, domain, source }));\n  }, [model, k, temperature, maxTokens, domain, source]);\n\n  function pushHistory(item: HistoryItem) {\n    const next = [item, ...history].slice(0, 12);\n    setHistory(next);\n    localStorage.setItem('pgai.history', JSON.stringify(next));\n  }\n\n  async function onSend(e?: React.FormEvent) {\n    e?.preventDefault();\n    if (!input.trim() || busy) return;\n\n    const text = input.trim();\n    setMessages(m => [...m, { id: crypto.randomUUID(), role: 'user', content: text }]);\n    setInput('');\n    setBusy(true);\n\n    try {\n      if (mode === 'summarize') {\n        const res = await api.summarize(text, { k, model, temperature, max_tokens: maxTokens, domain: domain || undefined, source: source || undefined });\n        setMessages(m => [...m, { id: crypto.randomUUID(), role: 'assistant', content: `**Summary** *(model: ${res.model})*\\n\\n${res.summary}` }]);\n      } else {\n        const res = await api.search(text, 5, { domain: domain || undefined, source: source || undefined });\n        const md = [\n          `**Search Results for:** ${res.query}`,\n          ...res.results.map((r, i) => {\n            const url = r.citation?.match(/\\((.+?):\\d+-\\d+\\)/)?.[1] ?? r?.meta?.source ?? '#';\n            return `**${i+1}.** ${r.text}\\n\\n> [${r.citation}](${url})`;\n          })\n        ].join('\\n\\n');\n        setMessages(m => [...m, { id: crypto.randomUUID(), role: 'assistant', content: md }]);\n      }\n      pushHistory({ id: crypto.randomUUID(), mode, input: text, at: Date.now(), params: { k, model, temperature, maxTokens, domain, source }});\n    } catch (e:any) {\n      setToast({ show: true, type: 'error', message: e.message || 'Request failed' });\n      setMessages(m => [...m, { id: crypto.randomUUID(), role: 'assistant', content: `❌ ${e.message}` }]);\n    } finally {\n      setBusy(false);\n    }\n  }\n\n  async function runIngest() {\n    setIngestBusy(true); setIngestOut(null);\n    try {\n      const list = urls.split('\\n').map(s=>s.trim()).filter(Boolean);\n      const res = await api.ingest(list, tokens, overlap, force);\n      setIngestOut(res);\n    } catch (e:any) {\n      setIngestOut({ error: e.message });\n      setToast({ show: true, type: 'error', message: e.message });\n    } finally {\n      setIngestBusy(false);\n    }\n  }\n\n  function reRun(h: HistoryItem) {\n    setMode(h.mode);\n    setInput(h.input);\n    if (h.params) {\n      if (h.params.model) setModel(h.params.model);\n      if (h.params.k) setK(h.params.k);\n      if (h.params.temperature != null) setTemperature(h.params.temperature);\n      if (h.params.maxTokens) setMaxTokens(h.params.maxTokens);\n      if (h.params.domain) setDomain(h.params.domain);\n      if (h.params.source) setSource(h.params.source);\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-slate-950 text-slate-100\">\n      <Toast show={toast.show} type={toast.type} message={toast.message} onClose={()=>setToast(s=>({...s, show:false}))} />\n\n      <header className=\"sticky top-0 z-10 border-b border-slate-800 bg-slate-950/80 backdrop-blur-md\">\n        <div className=\"max-w-6xl mx-auto px-4 py-3 flex items-center justify-between\">\n          <div>\n            <div className=\"font-bold\">Production-Grade AI — RAG (Next.js)</div>\n            <div className=\"text-xs text-slate-400\">\n              API: {process.env.NEXT_PUBLIC_API_BASE} • Health: <span className=\"text-emerald-400\">{health}</span>\n            </div>\n          </div>\n          <div className=\"hidden md:flex items-center gap-3\">\n            <div className=\"flex items-center bg-slate-900 border border-slate-700 rounded-lg overflow-hidden\">\n              <button\n                className={`px-3 py-1 text-sm ${mode==='search'?'bg-slate-800':''}`}\n                onClick={()=>setMode('search')}\n                disabled={busy}\n              >Search</button>\n              <button\n                className={`px-3 py-1 text-sm ${mode==='summarize'?'bg-slate-800':''}`}\n                onClick={()=>setMode('summarize')}\n                disabled={busy}\n              >Summarize</button>\n            </div>\n\n            {/* Summarize-only controls */}\n            {mode==='summarize' && (\n              <>\n                <select className=\"bg-slate-900 border border-slate-700 rounded-lg px-2 py-1\" value={model} onChange={e=>setModel(e.target.value)}>\n                  <option>llama3:8b</option>\n                  <option>qwen2.5:3b-instruct</option>\n                </select>\n                <label className=\"text-xs\">k <input className=\"w-14 ml-1 bg-slate-900 border border-slate-700 rounded px-2 py-1\" type=\"number\" value={k} onChange={e=>setK(Number(e.target.value))}/></label>\n                <label className=\"text-xs\">temp <input className=\"w-20 ml-1 bg-slate-900 border border-slate-700 rounded px-2 py-1\" type=\"number\" step={0.1} min={0} max={1} value={temperature} onChange={e=>setTemperature(Number(e.target.value))}/></label>\n                <label className=\"text-xs\">max <input className=\"w-20 ml-1 bg-slate-900 border border-slate-700 rounded px-2 py-1\" type=\"number\" value={maxTokens} onChange={e=>setMaxTokens(Number(e.target.value))}/></label>\n              </>\n            )}\n          </div>\n        </div>\n      </header>\n\n      <main className=\"max-w-6xl mx-auto px-4 grid grid-cols-1 md:grid-cols-[220px_1fr] gap-4\">\n        {/* LEFT: history */}\n        <aside className=\"hidden md:block pt-3\">\n          <div className=\"text-xs uppercase text-slate-400 mb-2\">History</div>\n          <div className=\"space-y-2\">\n            {history.length === 0 && <div className=\"text-slate-500 text-xs\">No history yet.</div>}\n            {history.map(h => (\n              <button\n                key={h.id}\n                className=\"w-full text-left text-xs bg-slate-900 border border-slate-800 hover:bg-slate-800 rounded-lg px-3 py-2\"\n                onClick={()=>reRun(h)}\n                title={new Date(h.at).toLocaleString()}\n              >\n                <div className=\"opacity-70\">{h.mode.toUpperCase()}</div>\n                <div className=\"truncate\">{h.input}</div>\n              </button>\n            ))}\n          </div>\n        </aside>\n\n        {/* RIGHT: chat + controls */}\n        <section>\n          <div className=\"mt-4 text-sm text-slate-400\">\n            {mode==='summarize'\n              ? 'Type a topic to generate a cited summary from your indexed sources.'\n              : 'Type a query to search semantically across your indexed sources.'}\n          </div>\n\n          <div ref={scroller} className=\"mt-3 h-[62vh] md:h-[66vh] overflow-y-auto space-y-3 pr-1\" aria-live=\"polite\">\n            {messages.length === 0 && (\n              <div className=\"text-slate-400 text-sm\">\n                Try {examples.slice(0,3).map((x,i)=> <code key={i} className=\"mx-1\">{x}</code>)} or switch to <b>Search</b> mode and enter keywords.\n              </div>\n            )}\n            {messages.map(m => (\n              <ChatBubble key={m.id} role={m.role} content={m.content} />\n            ))}\n            {busy && <div className=\"text-slate-400 text-sm flex items-center gap-2\"><Spinner/> Working…</div>}\n          </div>\n\n          <form onSubmit={onSend} className=\"sticky bottom-4 mt-4 bg-slate-900/70 border border-slate-800 rounded-2xl p-2 flex flex-col gap-2\">\n            <div className=\"flex gap-2\">\n              <input\n                className=\"flex-1 bg-transparent outline-none px-3 py-2\"\n                placeholder={mode==='summarize' ? \"Type a topic to summarize…\" : \"Type a query to search…\"}\n                value={input}\n                onChange={e=>setInput(e.target.value)}\n              />\n              <button className=\"bg-blue-600 hover:bg-blue-500 active:bg-blue-700 rounded-xl px-4 py-2\" disabled={busy}>\n                {busy ? '...' : (mode==='summarize' ? 'Summarize' : 'Search')}\n              </button>\n            </div>\n            {/* Optional filters */}\n            <div className=\"flex flex-wrap gap-2 text-xs text-slate-300\">\n              <label>domain <input className=\"w-56 ml-1 bg-slate-950 border border-slate-800 rounded px-2 py-1\" value={domain} onChange={e=>setDomain(e.target.value)} placeholder=\"e.g. en.wikipedia.org\" /></label>\n              <label>source <input className=\"w-64 ml-1 bg-slate-950 border border-slate-800 rounded px-2 py-1\" value={source} onChange={e=>setSource(e.target.value)} placeholder=\"e.g. /wiki/History_of_Microsoft\" /></label>\n            </div>\n          </form>\n\n          <section className=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <IngestCard\n              urls={urls} setUrls={setUrls}\n              tokens={tokens} setTokens={setTokens}\n              overlap={overlap} setOverlap={setOverlap}\n              force={force} setForce={setForce}\n              runIngest={runIngest}\n              out={ingestOut} busy={ingestBusy}\n            />\n            <ExamplesCard examples={examples} onPick={(q) => setInput(q)} />\n          </section>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nfunction IngestCard(props: {\n  urls: string; setUrls: (v:string)=>void;\n  tokens: number; setTokens: (n:number)=>void;\n  overlap: number; setOverlap: (n:number)=>void;\n  force: boolean; setForce: (b:boolean)=>void;\n  runIngest: () => void;\n  out: any; busy: boolean;\n}) {\n  const { urls, setUrls, tokens, setTokens, overlap, setOverlap, force, setForce, runIngest, out, busy } = props;\n  return (\n    <div className=\"bg-slate-900 border border-slate-800 rounded-2xl p-4\">\n      <div className=\"font-semibold mb-2\">Ingest URLs</div>\n      <textarea className=\"w-full bg-slate-950 border border-slate-800 rounded-lg p-2 h-24\" value={urls} onChange={e=>setUrls(e.target.value)} />\n      <div className=\"flex flex-wrap gap-2 items-center mt-2 text-sm\">\n        <label>tokens <input className=\"w-20 bg-slate-950 border border-slate-800 rounded px-2 py-1 ml-1\" type=\"number\" value={tokens} onChange={e=>setTokens(Number(e.target.value))}/></label>\n        <label>overlap <input className=\"w-20 bg-slate-950 border border-slate-800 rounded px-2 py-1 ml-1\" type=\"number\" value={overlap} onChange={e=>setOverlap(Number(e.target.value))}/></label>\n        <label className='flex items-center gap-2'><input type=\"checkbox\" checked={force} onChange={e=>setForce(e.target.checked)} /> force</label>\n        <button onClick={runIngest} className=\"bg-emerald-600 hover:bg-emerald-500 rounded-lg px-3 py-1.5\" disabled={busy}>{busy?'…':'Ingest'}</button>\n      </div>\n      {out && (\n        <div className=\"mt-3 text-xs space-y-2\">\n          {'error' in out ? (\n            <div className=\"text-rose-300\">Error: {String(out.error)}</div>\n          ) : (\n            <>\n              <div className=\"flex gap-2 text-slate-300\">\n                <span className=\"bg-slate-800 px-2 py-0.5 rounded\">indexed: {out.indexed}</span>\n                <span className=\"bg-slate-800 px-2 py-0.5 rounded\">chunks: {out.chunks}</span>\n                <span className=\"bg-slate-800 px-2 py-0.5 rounded\">avg words: {out.avg_chunk_words}</span>\n                {out.skipped ? <span className=\"bg-slate-800 px-2 py-0.5 rounded\">skipped: {out.skipped}</span> : null}\n              </div>\n              <pre className=\"text-xs bg-slate-950 border border-slate-800 rounded-lg p-2 whitespace-pre-wrap\">{JSON.stringify(out, null, 2)}</pre>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction ExamplesCard({ examples, onPick }: { examples: string[]; onPick: (q: string) => void }) {\n  const items = examples?.length ? examples : [\n    'emperor',\n    'roman army tactics',\n    'history of microsoft',\n    'Byzantine emperors',\n  ];\n  return (\n    <div className=\"bg-slate-900 border border-slate-800 rounded-2xl p-4\">\n      <div className=\"font-semibold mb-2\">Examples</div>\n      <div className=\"grid grid-cols-2 gap-2 text-sm\">\n        {items.map(x => (\n          <button key={x} className=\"bg-slate-800 hover:bg-slate-700 rounded-lg px-3 py-2 text-left\" onClick={()=>onPick(x)}>{x}</button>\n        ))}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}